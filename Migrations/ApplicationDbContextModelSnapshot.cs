// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpyFallBackend.Data;

#nullable disable

namespace SpyFallBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SpyFallBackend.Models.GameTable", b =>
                {
                    b.Property<Guid>("GameTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentRound")
                        .HasColumnType("int");

                    b.Property<string>("GameStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PlayerCount")
                        .HasColumnType("int");

                    b.Property<string>("TableKey")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("GameTableId");

                    b.ToTable("GameTables");
                });

            modelBuilder.Entity("SpyFallBackend.Models.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BoxOpened")
                        .HasColumnType("bit");

                    b.Property<Guid>("GameTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSpy")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PlayerId");

                    b.HasIndex("GameTableId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SpyFallBackend.Models.Word", b =>
                {
                    b.Property<Guid>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WordListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WordText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WordId");

                    b.HasIndex("WordListId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("SpyFallBackend.Models.WordList", b =>
                {
                    b.Property<Guid>("WordListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WordListId");

                    b.HasIndex("GameTableId")
                        .IsUnique();

                    b.ToTable("WordLists");
                });

            modelBuilder.Entity("SpyFallBackend.Models.Player", b =>
                {
                    b.HasOne("SpyFallBackend.Models.GameTable", "GameTable")
                        .WithMany("Players")
                        .HasForeignKey("GameTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameTable");
                });

            modelBuilder.Entity("SpyFallBackend.Models.Word", b =>
                {
                    b.HasOne("SpyFallBackend.Models.WordList", "WordList")
                        .WithMany("Words")
                        .HasForeignKey("WordListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordList");
                });

            modelBuilder.Entity("SpyFallBackend.Models.WordList", b =>
                {
                    b.HasOne("SpyFallBackend.Models.GameTable", "GameTable")
                        .WithOne("WordList")
                        .HasForeignKey("SpyFallBackend.Models.WordList", "GameTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameTable");
                });

            modelBuilder.Entity("SpyFallBackend.Models.GameTable", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("WordList");
                });

            modelBuilder.Entity("SpyFallBackend.Models.WordList", b =>
                {
                    b.Navigation("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
